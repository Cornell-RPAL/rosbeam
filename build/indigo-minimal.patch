diff -rup -x .git cache/catkin/cmake/all.cmake src/catkin/cmake/all.cmake
--- cache/catkin/cmake/all.cmake	2015-04-09 15:39:34.237278711 -0400
+++ src/catkin/cmake/all.cmake	2015-04-09 15:41:23.480852821 -0400
@@ -133,10 +133,6 @@ foreach(filename
     platform/lsb
     platform/ubuntu
     platform/windows
-    test/tests # defines CATKIN_ENABLE_TESTING, required by other test functions
-    test/catkin_download_test_data
-    test/gtest
-    test/nosetests
     tools/doxygen
     tools/libraries
     tools/rt
diff -rup -x .git cache/catkin/CMakeLists.txt src/catkin/CMakeLists.txt
--- cache/catkin/CMakeLists.txt	2015-04-09 15:39:34.237278711 -0400
+++ src/catkin/CMakeLists.txt	2015-04-09 15:41:23.480852821 -0400
@@ -21,8 +21,3 @@ install(DIRECTORY cmake
   PATTERN "catkinConfig.cmake.in" EXCLUDE)
 
 catkin_python_setup()
-
-if(CATKIN_ENABLE_TESTING)
-  catkin_add_nosetests(test/local_tests)
-  catkin_add_nosetests(test/unit_tests)
-endif()
diff -rup -x .git cache/common_msgs/nav_msgs/CMakeLists.txt src/common_msgs/nav_msgs/CMakeLists.txt
--- cache/common_msgs/nav_msgs/CMakeLists.txt	2015-04-09 15:39:50.121127161 -0400
+++ src/common_msgs/nav_msgs/CMakeLists.txt	2015-04-09 15:25:49.000000000 -0400
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 2.8.3)
 project(nav_msgs)
 
-find_package(catkin REQUIRED COMPONENTS geometry_msgs message_generation std_msgs actionlib_msgs)
+find_package(catkin REQUIRED COMPONENTS geometry_msgs message_generation std_msgs)
 
 add_message_files(
   DIRECTORY msg
@@ -19,10 +19,6 @@ add_service_files(
   GetPlan.srv
   SetMap.srv)
 
-add_action_files(
-  FILES
-  GetMap.action)
-
-generate_messages(DEPENDENCIES geometry_msgs std_msgs actionlib_msgs)
+generate_messages(DEPENDENCIES geometry_msgs std_msgs)
 
-catkin_package(CATKIN_DEPENDS geometry_msgs message_runtime std_msgs actionlib_msgs)
+catkin_package(CATKIN_DEPENDS geometry_msgs message_runtime std_msgs)
diff -rup -x .git cache/genmsg/CMakeLists.txt src/genmsg/CMakeLists.txt
--- cache/genmsg/CMakeLists.txt	2015-04-09 15:39:32.653293784 -0400
+++ src/genmsg/CMakeLists.txt	2015-04-09 15:41:23.480852821 -0400
@@ -18,7 +18,3 @@ catkin_python_setup()
 install(
   PROGRAMS scripts/genmsg_check_deps.py
   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})
-
-if(CATKIN_ENABLE_TESTING)
-  catkin_add_nosetests(test)
-endif()
diff -rup -x .git cache/geometry_experimental/tf2_msgs/CMakeLists.txt src/geometry_experimental/tf2_msgs/CMakeLists.txt
--- cache/geometry_experimental/tf2_msgs/CMakeLists.txt	2015-04-09 15:39:56.313067888 -0400
+++ src/geometry_experimental/tf2_msgs/CMakeLists.txt	2015-04-09 15:41:23.480852821 -0400
@@ -1,20 +1,19 @@
 cmake_minimum_required(VERSION 2.8.3)
 project(tf2_msgs)
 
-find_package(catkin REQUIRED COMPONENTS message_generation geometry_msgs actionlib_msgs)
+find_package(catkin REQUIRED COMPONENTS message_generation geometry_msgs)
 find_package(Boost COMPONENTS thread REQUIRED)
 
 add_message_files(DIRECTORY msg FILES TF2Error.msg TFMessage.msg)
 add_service_files(DIRECTORY srv FILES FrameGraph.srv)
 
-add_action_files(DIRECTORY action FILES LookupTransform.action)
 generate_messages(
-  DEPENDENCIES actionlib_msgs std_msgs geometry_msgs
+  DEPENDENCIES std_msgs geometry_msgs
 )
 
 catkin_package(
    INCLUDE_DIRS include
-   CATKIN_DEPENDS message_generation geometry_msgs actionlib_msgs)
+   CATKIN_DEPENDS message_generation geometry_msgs)
 
 
 
diff -rup -x .git cache/message_generation/CMakeLists.txt src/message_generation/CMakeLists.txt
--- cache/message_generation/CMakeLists.txt	2015-04-09 15:39:32.025299758 -0400
+++ src/message_generation/CMakeLists.txt	2015-04-09 15:41:23.480852821 -0400
@@ -3,4 +3,4 @@ project(message_generation)
 
 find_package(catkin REQUIRED)
 
-catkin_package(CATKIN_DEPENDS gencpp genlisp genmsg genpy)
+catkin_package(CATKIN_DEPENDS gencpp genmsg)
diff -rup -x .git cache/ros_comm/rosconsole/CMakeLists.txt src/ros_comm/rosconsole/CMakeLists.txt
--- cache/ros_comm/rosconsole/CMakeLists.txt	2015-04-09 15:40:10.544931260 -0400
+++ src/ros_comm/rosconsole/CMakeLists.txt	2015-04-09 15:41:23.480852821 -0400
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 2.8.3)
 project(rosconsole)
 
-find_package(catkin REQUIRED COMPONENTS cpp_common rostime rosunit)
+find_package(catkin REQUIRED COMPONENTS cpp_common rostime)
 
 find_package(Boost COMPONENTS regex system thread)
 
diff -rup -x .git cache/roscpp_core/cpp_common/CMakeLists.txt src/roscpp_core/cpp_common/CMakeLists.txt
--- cache/roscpp_core/cpp_common/CMakeLists.txt	2015-04-09 15:39:42.025204497 -0400
+++ src/roscpp_core/cpp_common/CMakeLists.txt	2015-04-09 15:41:23.480852821 -0400
@@ -2,10 +2,9 @@ cmake_minimum_required(VERSION 2.8.3)
 project(cpp_common)
 
 find_package(Boost REQUIRED COMPONENTS system thread)
-find_package(console_bridge REQUIRED)
 find_package(catkin REQUIRED)
 catkin_package(
-  DEPENDS Boost console_bridge
+  DEPENDS Boost
   INCLUDE_DIRS include
   LIBRARIES ${PROJECT_NAME})
 
@@ -13,7 +12,7 @@ include(CheckIncludeFile)
 include(CheckFunctionExists)
 include(CheckCXXSourceCompiles)
 
-include_directories(include ${Boost_INCLUDE_DIRS} ${console_bridge_INCLUDE_DIRS})
+include_directories(include ${Boost_INCLUDE_DIRS})
 
 # execinfo.h is needed for backtrace on glibc systems
 CHECK_INCLUDE_FILE(execinfo.h HAVE_EXECINFO_H)
@@ -32,7 +31,7 @@ if(HAVE_GLIBC_BACKTRACE)
 endif(HAVE_GLIBC_BACKTRACE)
 
 add_library(${PROJECT_NAME} src/debug.cpp src/header.cpp)
-target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES} ${console_bridge_LIBRARIES})
+target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES})
 
 install(TARGETS ${PROJECT_NAME}
   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
diff -rup -x .git cache/roscpp_core/cpp_common/src/header.cpp src/roscpp_core/cpp_common/src/header.cpp
--- cache/roscpp_core/cpp_common/src/header.cpp	2015-04-09 15:39:42.025204497 -0400
+++ src/roscpp_core/cpp_common/src/header.cpp	2015-04-09 15:41:23.480852821 -0400
@@ -34,7 +34,7 @@
 
 #include "ros/header.h"
 
-#include "console_bridge/console.h"
+#include <iostream>
 
 #include <sstream>
 
@@ -79,7 +79,7 @@ bool Header::parse(uint8_t* buffer, uint
     if (len > 1000000)
     {
       error_msg = "Received an invalid TCPROS header.  Each element must be prepended by a 4-byte length.";
-      logError("%s", error_msg.c_str());
+      std::cerr << error_msg << std::endl;
 
       return false;
     }
@@ -93,7 +93,7 @@ bool Header::parse(uint8_t* buffer, uint
     if (eqpos == string::npos)
     {
       error_msg = "Received an invalid TCPROS header.  Each line must have an equals sign.";
-      logError("%s", error_msg.c_str());
+      std::cerr << error_msg << std::endl;
 
       return false;
     }
